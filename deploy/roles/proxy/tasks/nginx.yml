---
# Open port 80 from the internet.
- name: "Allow http port 80"
  community.general.ufw:
    rule: allow
    port: "{{ http_port | default('80')}}"
    proto: tcp
    comment: http
    state: enabled

# Allow https port from the internet
- name: "Allow https port 443"
  community.general.ufw:
    rule: allow
    port: "{{ https_port | default('443') }}"
    proto: tcp
    comment: https

- name: "Ensure apache2 is stopped and disabled." 
  ansible.builtin.service:
    name: apache2
    enabled: false
    state: stopped 
  register: unused_disable
  failed_when: "unused_disable is failed and ('find' not in unused_disable.msg and 'found' not in unused_disable.msg)"
  # ignore_errors: yes
      
- name: "Updating and Upgrading proxy"
  ansible.builtin.apt: 
    upgrade: yes 
    update_cache: yes
    cache_valid_time: 86400

## install nginx
- name: "Installing Nginx" 
  apt: name=nginx state=latest

# Disabling nginx version 
- name: "Disabling nginx version show"
  lineinfile:
    dest: /etc/nginx/nginx.conf
    regex: '.*server_tokens off'
    line: "\tserver_tokens off;"
    insertafter: "types_hash_max_size"
  notify: Reload Nginx

# Remove default nginx config
- name: "Remove default nginx site" 
  file: name=/etc/nginx/sites-enabled/default state=absent

# include SSL/TLS tasks 
- include_tasks: "{{SSL_TYPE}}.yml"

# Generate dhparams 
- name: "Generating  Diffieâ€“Hellman key parameters, takes a while, you may grab some coffee"
  command: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem

# Coping nginx configuration to the proxy 
- name: "Copy nginx site configuration"
  template: >
    src=nginx/site.j2
    dest=/etc/nginx/conf.d/{{fqdn}}.conf
    owner=root group=root mode=644
  notify: Reload Nginx
# Ensure nginx service is started
- name: "Start nginx service" 
  ansible.builtin.service: >
    name=nginx state=started

- name: "Creating nginx upstream directory"
  ansible.builtin.file:
    path: /etc/nginx/conf.d/upstream
    state: directory

- name: "Copy dhis2 location configs" 
  template:
    src: nginx/instance.j2
    dest: /etc/nginx/conf.d/upstream/dhis2.conf
  notify: Reload Nginx

- name: "Copy {{ app_monitoring }} location configs"
  template:
    src: nginx/{{ app_monitoring }}.j2 
    dest: /etc/nginx/conf.d/upstream/{{ app_monitoring }}.conf
  when: app_monitoring is defined
  notify: Reload Nginx

- name: "Copy {{ server_monitoring }} location configs"
  template:
    src: nginx/{{server_monitoring}}.j2
    dest: /etc/nginx/conf.d/upstream/{{ server_monitoring }}.conf 
  notify: Reload Nginx
  when: server_monitoring is defined 

- name: "Flush Handlers"
  meta: flush_handlers
