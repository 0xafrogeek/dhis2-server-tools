##
server {
  listen  80;
  server_name {{ fqdn }};
  if ($host != "{{ fqdn }}") {
    return 444;
  }
  return 301 https://$host$request_uri;
}
## https Block
server {
  listen 443 ssl;
  ssl_stapling on;
  ssl_stapling_verify  on;
  server_name {{ fqdn }};
  ssl_certificate /etc/letsencrypt/live/{{fqdn}}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{fqdn}}/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  #ssl_session_cache shared:SSL:20m;
  ssl_session_timeout 10h;
  ssl_prefer_server_ciphers on;
  underscores_in_headers on;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header Referrer-Policy "no-referrer";
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;

# This is quite strict.  If you have much older windoze browsers
  #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  # more open, supports even older platforms. 
  #ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  client_max_body_size 200M;
  if ($host != "{{ fqdn }}") {
    return 444;
  }
# Proxy pass to the backend 
  
}

