---
# tasks file for ./roles/postgresql
# create postgresql container
- name: Create postgres container
  connection: local
  community.general.lxd_container:
    name: postgres
    state: started
    profiles: [ "default" ]
    wait_for_ipv4_addresses: true
    ignore_volatile_options: false
    timeout: 600
    source:
      type: image
      mode: pull
      server: https://cloud-images.ubuntu.com/releases
      protocol: simplestreams
      fingerprint: e3e1bd82cdc7
      #alias: ubuntu/{{ containers[1].guest_os }} 
    devices:
      eth0:
        nictype:  "{{ containers[1].nictype | default ('bridged') }}"
        parent:   "{{ containers[1].network | default ('lxdbr0') }}"
        type:     "{{ containers[1].interface_type | default ('nic') }}"
        ipv4.address: "{{ containers[1].ip | ipaddr(lxd_network) | default(omit)}}" 
        # ipaddr ensures that the address variable is is in lxd_network to be usable. 
          #delegate_to: postgres

- name: Install pre-requisites
  connection: community.general.lxd
  apt:
    name:
      #- add-apt-key
      - ca-certificates
        #- dnsutils
  delegate_to: postgres
- name: Add an Apt signing key
  connection: community.general.lxd
  ansible.builtin.apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc" # https://www.postgresql.org/media/keys/ACCC4CF8.asc
      # https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  delegate_to: postgres

# add postgres apt repository 
- name: Add Postgres APT repository into sources list
  connection: community.general.lxd
  ansible.builtin.apt_repository:
    repo: "deb https://apt.postgresql.org/pub/repos/apt {{ ansible_lsb.codename }}-pgdg main"
    update_cache: true
    state: present
  delegate_to: postgres


# Install postgresql and python module for Postgres
- name: "Install postgres Version {{ postgresql_version }}"
  connection: community.general.lxd
  apt:
    name: 
      - postgresql-{{ postgresql_version }}
      - postgresql-client-{{ postgresql_version }}
      - postgresql-{{ postgresql_version }}-postgis-2.5
      - python3-psycopg2 # python module for postgres
    update_cache: yes
    cache_valid_time: 3600
  delegate_to: postgres

# Check postgresql Version
- name: Check posgresql Version
  connection: community.general.lxd
  become: yes
  become_user: postgres
  postgresql_info:
    filter: ver*
  delegate_to: postgres
  register: postgresql_version_info

# Allow postgress listening on all the interfacess
- name: Allow posgress listening on network
  connection: community.general.lxd
  delegate_to: postgres
  lineinfile:
    dest: /etc/postgresql/{{ postgresql_version_info.version.major }}/main/postgresql.conf
    regex: "^#?listen_addresses"
    line: "listen_addresses '*'"
  notify: Restart postgres

# harden postgre host network, allow its access from dhis2 instances only, use ufw. 
