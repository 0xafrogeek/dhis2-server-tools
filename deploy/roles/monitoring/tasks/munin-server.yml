# apt install apache2 libcgi-fast-perl libapache2-mod-fcgid
- name: "Updating and Upgrading monitoring server"
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 7200 # 2 hours
    upgrade: yes

- name: Install munin tool
  ansible.builtin.apt:
    name:
      - apache2
      - libcgi-fast-perl
      - libapache2-mod-fcgid
      - munin # this install munin munin node and munin plugins extra
      - python3-passlib

# Copy munin configuration from the template
- name: "Copy munin configurations."
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - src: munin.conf.j2
      dest: /etc/munin/munin.conf
    - src: hosts.conf.j2
      dest: "{{ munin_conf_d_directory }}/hosts.conf"

#  If you want to access the Munin Web interface outside your localhost,
- name: "Edit munin config"
  ansible.builtin.lineinfile:
    firstmatch: yes
    regex: '^(.*)Require local'
    dest: /etc/munin/apache24.conf
    line: '\1Require all granted'
    backrefs: yes

# Enable apache2 configurations for munin monitoring
- name: "Enable apache2 configuration for munin access from the web."
  ansible.builtin.file:
    src: /etc/munin/apache24.conf
    dest: /etc/apache2/sites-enabled/munin.conf
    state: link
    owner: root
    mode: '0644'
  notify: Restart Apache2

- name: "Allow https access from proxy"
  community.general.ufw:
    rule: allow
    port: "{{ munin_http_port|default('80') }}"
    src: "{{ hostvars[item]['ansible_host'] }}"
    proto: tcp
    comment: "Allow access from {{ item }} instance "
    state: enabled
  loop: "{{groups['web'] }}"

# Setup Node to monitor multiple systems
- name: "Enable or disable the munin cron job."
  ansible.builtin.lineinfile:
    dest: /etc/cron.d/munin
    state: "{{ munin_cron_job }}"
    regexp: "^\\*/5 \\* \\* \\* \\*"
    line: "*/5 * * * *     munin if [ -x /usr/bin/munin-cron ]; then /usr/bin/munin-cron; fi"
    create: yes
    mode: 0644
  tags: [ never ]
