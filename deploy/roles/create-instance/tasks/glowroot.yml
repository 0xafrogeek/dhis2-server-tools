---
- name: Download and extract glowroot
  ansible.builtin.unarchive:
    src: https://github.com/glowroot/glowroot/releases/download/v0.14.0/glowroot-0.14.0-dist.zip
    dest: /opt/
    owner: tomcat
    group: tomcat
    remote_src: true
    mode: "0700"

- name: Change ownership and permissions of glowroot.jar
  ansible.builtin.file:
    path: /opt/glowroot/glowroot.jar
    owner: root
    group: tomcat
    mode: '0640'

- name: Find jar files in /opt/glowroot/lib
  ansible.builtin.find:
    path: "/opt/glowroot/lib"
    pattern: "*.jar"
  register: jar_files

- name: Change ownership and permissions of found jar files in /opt/glowroot/lib
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: root
    group: tomcat
    mode: '0640'
  loop: "{{ jar_files.files }}"

- name: Check if /opt/glowroot/admin.json file exists
  ansible.builtin.stat:
    path: /opt/glowroot/admin.json
  register: glowroot_admin_file_status

- name: Copy glowroot configs to the instances
  ansible.builtin.template:
    src: glowroot_admin.json
    dest: /opt/glowroot/admin.json
    group: tomcat
    owner: tomcat
    mode: "0640"
  when: not glowroot_admin_file_status.stat.exists
  notify: Restart Tomcat

- name: Configure glowroot basepath
  ansible.builtin.lineinfile:
    path: /opt/glowroot/admin.json
    regexp: '^(.*)"contextPath"'
    line: '\1"contextPath": "{{ "/glowroot" if instance_name | default(inventory_hostname) | to_fixed_string == "ROOT" else "/" + instance_name | default(inventory_hostname) | to_fixed_string + "-glowroot" }}",'
    backrefs: true
  notify: Restart Tomcat
