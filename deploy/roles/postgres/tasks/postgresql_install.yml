---
# Adding postgresql signing key
- name: Update and upgrade
  ansible.builtin.apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400

- name: Add an Apt signing key
  become: True
  ansible.builtin.apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present

 # add postgres apt repository 
- name: Add Postgres APT repository into sources list
  ansible.builtin.apt_repository:
    repo: "deb https://apt.postgresql.org/pub/repos/apt {{ hostvars[inventory_hostname]['ansible_facts']['distribution_release'] }}-pgdg main"
    update_cache: True
    state: present

# Install postgresql and python module for Postgres
- name: "Install postgres Version {{ postgresql_version }}"
  ansible.builtin.apt: 
    name: 
      - ca-certificates
      - postgresql-{{ postgresql_version }}
      - postgresql-client-{{ postgresql_version }}
      - postgresql-{{ postgresql_version }}-postgis-{{'2.5' if guest_os == '20.04' else '3'}}
      # - postgresql-{{ postgresql_version }}-postgis-2.5
      - python3-psycopg2 
      - libdbd-pg-perl

# sometimes postgres is installed but not started
- name: Ensure postgresql is running
  become: True
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes
  
# Check postgresql Version
- name: Check posgresql Version
  become: true
  become_method: sudo
  become_user: postgres
  community.postgresql.postgresql_info:
    filter: ver*
  register: postgresql_version_info

# Fixing pg_hba.conf permissions
- name: Fixing pg_hba.conf permissions, allowing instances to connect
  become: True
  lineinfile:
    path: /etc/postgresql/{{postgresql_version_info.version.major}}/main/pg_hba.conf
    insertafter: EOF
    line: "host    {{item}}   {{item}}  {{hostvars[item]['ansible_host']}}/32   md5"
  loop: "{{ groups['instances'] }}"
  when:
    - inventory_hostname == hostvars[item]['database_host'] 
  notify: Restart Postgres

- name: Allow posgress listening on network
  lineinfile:
    dest: /etc/postgresql/{{ postgresql_version_info.version.major }}/main/postgresql.conf
    regex: "^#?listen_addresses"
    line: "listen_addresses '*'"
  notify: Restart Postgres

# Allow access from dhis2 instances to postgresql port 5432
- name: Firewall | Open port 5432 from dhis2 instances
  community.general.ufw:
    rule: allow
    port: "{{ postgresql_port | default('5432')}}"
    src: "{{ hostvars[item]['ansible_host'] }}"
    proto: tcp
    comment: "Allow access from {{ item }} instance "
    state: enabled
  loop: "{{ groups['instances'] }}"
  when: inventory_hostname == hostvars[item]['database_host']
